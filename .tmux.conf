# Sources:
#   https://linux.die.net/man/1/tmux
#   https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
#   https://rudra.dev/posts/a-mininal-tmux-configuration-from-scratch/

# Change base key combination to C-a
unbind-key C-b
set -g prefix C-z
bind-key C-z send-prefix

set -g default-command bash

set -g status-keys emacs
set -g mode-keys emacs

# Timeout (in milliseconds) for repeated commands
set -g repeat-time 700

# Allow X-session access for GUIs
# https://unix.stackexchange.com/a/475884
set -g update-environment 'SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION DISPLAY TERM XAUTHORITY WINDOWID'

# Set the global PATH
set-environment -g PATH "$PATH"

# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# switch windows
bind -r . next-window
bind -r , previous-window

# switch sessions
bind s choose-session
bind S choose-tree
bind ( switch-client -p # previous
bind ) switch-client -n # next
bind L switch-client -l # last used

# re-order windows
bind -r < swap-window -t -1\; select-window -t -1
bind -r > swap-window -t +1\; select-window -t +1
bind N run "~/.bin/tmux-window-renumber.sh"

# Pane/window starting and killing
bind M-q kill-pane
bind M-w kill-window
bind M-K kill-session
bind M-R respawn-pane

# Create new session
bind C command-prompt -p "New Session:" "new-session -A -s '%%'"

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Copy and paste
bind -T copy-mode M-w send -X copy-pipe 'xclip -in -selection clipboard'
bind -T copy-mode C-w send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode MouseDown1Pane select-pane\; send -X clear-selection

CLEAR_SELECTION_OPTIONALLY="if [ #{active_selection} = 0 ]; then tmux send -X clear-selection; fi"
SCROLL_NORMAL_STEP=3
SCROLL_BIG_STEP=10
bind -T copy-mode WheelUpPane select-pane\; \
     run $CLEAR_SELECTION_OPTIONALLY\; send-keys -X -N $SCROLL_NORMAL_STEP scroll-up
bind -T copy-mode WheelDownPane select-pane\; \
     run $CLEAR_SELECTION_OPTIONALLY\; send-keys -X -N $SCROLL_NORMAL_STEP scroll-down
bind -T copy-mode M-WheelUpPane select-pane\; \
     run $CLEAR_SELECTION_OPTIONALLY\; send-keys -X -N $SCROLL_BIG_STEP scroll-up
bind -n M-WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""
bind -T copy-mode M-WheelDownPane select-pane\; \
     run $CLEAR_SELECTION_OPTIONALLY\; send-keys -X -N $SCROLL_BIG_STEP scroll-down

setenv -g active_selection 0
bind -T copy-mode MouseDrag1Pane select-pane\; send-keys -X begin-selection\; setenv active_selection 1
bind -n MouseDrag1Pane if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"\; setenv active_selection 1
bind -T copy-mode MouseDragEnd1Pane setenv active_selection 0

# Double click to copy word
bind-key -n DoubleClick1Pane select-pane\; copy-mode -M\; send-keys -X select-word\; \
         send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind-key -n TripleClick1Pane select-pane\; copy-mode -M\; send-keys -X select-line\; \
         send-keys -X copy-pipe-no-clear "xclip -in -sel primary"

# Fast scroll
bind -T copy-mode M-S-Down send-keys -X page-down
bind -T copy-mode M-S-Up send-keys -X page-up
bind -T copy-mode C-v send-keys -X halfpage-down
bind -T copy-mode M-v send-keys -X halfpage-up
unbind -T copy-mode M-Up
unbind -T copy-mode M-Down

# Fast cursor move
bind -T copy-mode M-f send-keys -X next-word-end
bind -T copy-mode M-b send-keys -X previous-word
bind -T copy-mode M-p send-keys -X previous-paragraph
bind -T copy-mode M-n send-keys -X next-paragraph

# Naming hotkeys
bind / command-prompt -I "#{window_name}" -p "Tab name:" "rename-window -- '%%'"
bind $ command-prompt -I "#{session_name}" -p "Session name:" "rename-session -- '%%'"

# don't rename windows automatically
set-option -g allow-rename off

# Don't detach on window close
set-option -g detach-on-destroy on

# ######################
# ### DESIGN CHANGES ###
# ######################

# Ctrl+K (Clear scrollback buffer)
bind -n C-k clear-history

# Set a larger scroll back
set-option -g history-limit 100000

# A quiter setup
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=black bg=#ECBE7B'

# Colors for pane borders(default)
set -g pane-border-style fg='#525252'
set -g pane-active-border-style fg=white

# Active pane normal, other shaded out
# setw -g window-style fg=colour240,bg=colour235
# setw -g window-active-style fg=white,bg=black
set -g window-style fg=colour240,bg=default
set -g window-active-style fg=white,bg=default
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Set status bar on
set -g status on

# Update the status line every second
set -g status-interval 1

# Set the position of window lists.
set -g status-justify centre # [left | centre | right]

# Set Vi style keybinding in the status line
set -g status-keys vi

# Set the status bar position
set -g status-position top # [top, bottom]

# Set status bar background and foreground color.
set -g status-style fg=colour136,bg="#1e2227"

# Set left side status bar length and style
set -g status-left-length 60
set -g status-left-style default

# Display the session name
REGULAR_STATUS_LEFT="#[fg=green] ‚ùê #S#[default]"
COPY_STATUS_LEFT="#[fg=green] ‚éò copy#[default]"
CONDITIONAL_STATUS_LEFT='set -g status-left "#{?#{==:#{pane_mode},copy-mode},$COPY_STATUS_LEFT,$REGULAR_STATUS_LEFT}"'
set -g status-left $REGULAR_STATUS_LEFT
set-hook -g client-session-changed $CONDITIONAL_STATUS_LEFT
set-hook -g pane-mode-changed $CONDITIONAL_STATUS_LEFT

# Set right side status bar length and style
set -g status-right-length 140
set -g status-right-style default

# Display the date
SEPARATOR="#[default,fg=#3e4452] | "
set -g status-right "#[fg=white,bg=default] üóì %a %d"
set -ag status-right $SEPARATOR

# Display the time
set -ag status-right "#[fg=colour172,bright,bg=default]%l:%M%p"
set -ag status-right $SEPARATOR

# Display the hostname
set -ag status-right "#[fg=cyan,bg=default]#H "

# Set the inactive window color and style
set -g window-status-style fg=colour244,bg=default
set -g window-status-format ' #I #W '

# Set the active window color and style
set -g window-status-current-style fg=black,bg=colour136
set -g window-status-current-format ' #I #W '

# ###############
# ### PLUGINS ###
# ###############

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# Fuzzy searching through scrollback
set -g @plugin 'roosta/tmux-fuzzback'
set -g @fuzzback-bind ?
set -g @fuzzback-popup 1
set -g @fuzzback-popup-size '90%'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
