#!/bin/bash
#
# Syncing script for the local directory with the remote repository.
#
# To get content from remote:
# $ ./sync pull
#
# To upload content to remote:
# $ ./sync push
#
# To do both at once:
# $ ./sync bidi
#
# Author: Danylo Malyuta, 2022.

OPERATION_KIND=$1
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Get some needed functions
source .modules/sync/vscode.sh
source .modules/functions.sh

push_operation() {
    GIT_DIFF_OUTPUT="$(diff_operation)"

    # Run pre-push commands
    vscode_cleanup_settings

    # Push to remote
    git add --all
    git --no-pager status
    if [ -n "$(git status --porcelain)" ]; then
        echo -e "$GIT_DIFF_OUTPUT"
        read -p 'Proceed [Yn]? ' USER_PROCEED
        if parse_yn "$USER_PROCEED"; then
            GIT_EDITOR=nano git commit
            git log --name-status HEAD^..HEAD
            read -p 'Push [Yn]? ' USER_PROCEED
            if parse_yn "$USER_PROCEED"; then
                git push
            else
                git reset HEAD~1
                echo "Aborting"
            fi
        else
            git reset
            echo "Aborting"
        fi
    fi

    # Post-push actions
    status_operation 1
}

pull_operation() {
    GIT_EDITOR=nano git pull
    git status
}

reset_operation() {
    git checkout -- .
}

status_operation() {
    local NO_CLEANUP="$1"
    if [[ -z "$NO_CLEANUP" ]]; then
        vscode_cleanup_settings
    fi
    git status
    vscode_restore_settings
}

diff_operation() {
    vscode_cleanup_settings
    RED='\033[0;31m'
    NC='\033[0m' # No Color
    BOLD=$(tput bold)
    NORM=$(tput sgr0)
    echo -e "${RED}${BOLD}-- Changes --${NC}${NORM}"
    git --no-pager diff --color=always
    echo -e "${RED}${BOLD}-------------${NC}${NORM}"
    vscode_restore_settings
}

if [[ $OPERATION_KIND = pull ]]; then
    pull_operation
elif [[ $OPERATION_KIND = push ]]; then
    push_operation
elif [[ $OPERATION_KIND = bidi ]]; then
    pull_operation
    push_operation
elif [[ $OPERATION_KIND = reset ]]; then
    reset_operation
elif [[ $OPERATION_KIND = status ]]; then
    status_operation
elif [[ $OPERATION_KIND = diff ]]; then
    diff_operation
else
    cat << EOF
Unknown command.
To view current status:
  $ ./sync status
To view local changes:
  $ ./sync diff
To download from remote:
  $ ./sync pull
To upload to remote:
  $ ./sync push
To do pull and then push:
  $ ./sync bidi
To undo all local changes:
  $ ./sync reset
EOF
fi
